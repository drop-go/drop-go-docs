---
swagger: "2.0"
info:
  version: "2022-11-25T00:55:39Z"
  title: "DropGoAdminApi"
host: "admin.drop-go-api.xyz"
schemes:
- "https"
paths:
  /:
    options:
      consumes:
      - "application/json"
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /auth:
    get:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "GetAuthTokenRequestModel"
        required: true
        schema:
          $ref: "#/definitions/GetAuthTokenRequestModel"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/GetAuthTokenResponseModel"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Content-Type:
              type: "string"
        "400":
          description: "400 response"
          schema:
            $ref: "#/definitions/Error"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Content-Type:
              type: "string"
        "500":
          description: "500 response"
          schema:
            $ref: "#/definitions/Error"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Content-Type:
              type: "string"
    options:
      consumes:
      - "application/json"
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /event:
    get:
      produces:
      - "application/json"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/GetAllEventResponseModel"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Content-Type:
              type: "string"
        "400":
          description: "400 response"
          schema:
            $ref: "#/definitions/Error"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Content-Type:
              type: "string"
        "500":
          description: "500 response"
          schema:
            $ref: "#/definitions/Error"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Content-Type:
              type: "string"
      security:
      - DropGoApiStackAuthorizerLambda738AEA6B: []
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "PostEventRequestModel"
        required: true
        schema:
          $ref: "#/definitions/PostEventRequestModel"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/PostEventResponseModel"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Content-Type:
              type: "string"
        "400":
          description: "400 response"
          schema:
            $ref: "#/definitions/Error"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Content-Type:
              type: "string"
        "500":
          description: "500 response"
          schema:
            $ref: "#/definitions/Error"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Content-Type:
              type: "string"
      security:
      - DropGoApiStackAuthorizerLambda738AEA6B: []
    options:
      consumes:
      - "application/json"
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /event/{eventId}:
    get:
      produces:
      - "application/json"
      parameters:
      - name: "eventId"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/GetEventResponseModel"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Content-Type:
              type: "string"
        "400":
          description: "400 response"
          schema:
            $ref: "#/definitions/Error"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Content-Type:
              type: "string"
        "500":
          description: "500 response"
          schema:
            $ref: "#/definitions/Error"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Content-Type:
              type: "string"
      security:
      - DropGoApiStackAuthorizerLambda738AEA6B: []
    put:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "eventId"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "PutEventRequestModel"
        required: true
        schema:
          $ref: "#/definitions/PutEventRequestModel"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/PutEventResponseModel"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Content-Type:
              type: "string"
        "400":
          description: "400 response"
          schema:
            $ref: "#/definitions/Error"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Content-Type:
              type: "string"
        "500":
          description: "500 response"
          schema:
            $ref: "#/definitions/Error"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Content-Type:
              type: "string"
      security:
      - DropGoApiStackAuthorizerLambda738AEA6B: []
    delete:
      produces:
      - "application/json"
      parameters:
      - name: "eventId"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/DeleteEventResponseModel"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Content-Type:
              type: "string"
        "400":
          description: "400 response"
          schema:
            $ref: "#/definitions/Error"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Content-Type:
              type: "string"
        "500":
          description: "500 response"
          schema:
            $ref: "#/definitions/Error"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Content-Type:
              type: "string"
      security:
      - DropGoApiStackAuthorizerLambda738AEA6B: []
    options:
      consumes:
      - "application/json"
      parameters:
      - name: "eventId"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /item:
    get:
      produces:
      - "application/json"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/GetAllItemResponseModel"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Content-Type:
              type: "string"
        "400":
          description: "400 response"
          schema:
            $ref: "#/definitions/Error"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Content-Type:
              type: "string"
        "500":
          description: "500 response"
          schema:
            $ref: "#/definitions/Error"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Content-Type:
              type: "string"
      security:
      - DropGoApiStackAuthorizerLambda738AEA6B: []
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "PostItemRequestModel"
        required: true
        schema:
          $ref: "#/definitions/PostItemRequestModel"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/PostItemResponseModel"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Content-Type:
              type: "string"
        "400":
          description: "400 response"
          schema:
            $ref: "#/definitions/Error"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Content-Type:
              type: "string"
        "500":
          description: "500 response"
          schema:
            $ref: "#/definitions/Error"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Content-Type:
              type: "string"
      security:
      - DropGoApiStackAuthorizerLambda738AEA6B: []
    options:
      consumes:
      - "application/json"
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /item/{itemId}:
    get:
      produces:
      - "application/json"
      parameters:
      - name: "itemId"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/GetItemResponseModel"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Content-Type:
              type: "string"
        "400":
          description: "400 response"
          schema:
            $ref: "#/definitions/Error"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Content-Type:
              type: "string"
        "500":
          description: "500 response"
          schema:
            $ref: "#/definitions/Error"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Content-Type:
              type: "string"
      security:
      - DropGoApiStackAuthorizerLambda738AEA6B: []
    put:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "itemId"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "PutItemRequestModel"
        required: true
        schema:
          $ref: "#/definitions/PutItemRequestModel"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/PutItemResponseModel"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Content-Type:
              type: "string"
        "400":
          description: "400 response"
          schema:
            $ref: "#/definitions/Error"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Content-Type:
              type: "string"
        "500":
          description: "500 response"
          schema:
            $ref: "#/definitions/Error"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Content-Type:
              type: "string"
      security:
      - DropGoApiStackAuthorizerLambda738AEA6B: []
    delete:
      produces:
      - "application/json"
      parameters:
      - name: "itemId"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/DeleteItemResponseModel"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Content-Type:
              type: "string"
        "400":
          description: "400 response"
          schema:
            $ref: "#/definitions/Error"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Content-Type:
              type: "string"
        "500":
          description: "500 response"
          schema:
            $ref: "#/definitions/Error"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Content-Type:
              type: "string"
      security:
      - DropGoApiStackAuthorizerLambda738AEA6B: []
    options:
      consumes:
      - "application/json"
      parameters:
      - name: "itemId"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /log:
    options:
      consumes:
      - "application/json"
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /log/download:
    get:
      produces:
      - "application/json"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/GetDownloadLogResponseModel"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Content-Type:
              type: "string"
        "400":
          description: "400 response"
          schema:
            $ref: "#/definitions/Error"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Content-Type:
              type: "string"
        "500":
          description: "500 response"
          schema:
            $ref: "#/definitions/Error"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Content-Type:
              type: "string"
      security:
      - DropGoApiStackAuthorizerLambda738AEA6B: []
    options:
      consumes:
      - "application/json"
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /user:
    get:
      produces:
      - "application/json"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/GetUserResponseModel"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Content-Type:
              type: "string"
        "400":
          description: "400 response"
          schema:
            $ref: "#/definitions/Error"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Content-Type:
              type: "string"
        "500":
          description: "500 response"
          schema:
            $ref: "#/definitions/Error"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Content-Type:
              type: "string"
      security:
      - DropGoApiStackAuthorizerLambda738AEA6B: []
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "PostUserRequestModel"
        required: true
        schema:
          $ref: "#/definitions/PostUserRequestModel"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/PostUserResponseModel"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Content-Type:
              type: "string"
        "400":
          description: "400 response"
          schema:
            $ref: "#/definitions/Error"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Content-Type:
              type: "string"
        "500":
          description: "500 response"
          schema:
            $ref: "#/definitions/Error"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Content-Type:
              type: "string"
    put:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "PutUserRequestModel"
        required: true
        schema:
          $ref: "#/definitions/PutUserRequestModel"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/PutUserResponseModel"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Content-Type:
              type: "string"
        "400":
          description: "400 response"
          schema:
            $ref: "#/definitions/Error"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Content-Type:
              type: "string"
        "500":
          description: "500 response"
          schema:
            $ref: "#/definitions/Error"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Content-Type:
              type: "string"
      security:
      - DropGoApiStackAuthorizerLambda738AEA6B: []
    delete:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "DeleteUserRequestModel"
        required: true
        schema:
          $ref: "#/definitions/DeleteUserRequestModel"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/DeleteUserResponseModel"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Content-Type:
              type: "string"
        "400":
          description: "400 response"
          schema:
            $ref: "#/definitions/Error"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Content-Type:
              type: "string"
        "500":
          description: "500 response"
          schema:
            $ref: "#/definitions/Error"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Content-Type:
              type: "string"
      security:
      - DropGoApiStackAuthorizerLambda738AEA6B: []
    options:
      consumes:
      - "application/json"
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
securityDefinitions:
  DropGoApiStackAuthorizerLambda738AEA6B:
    type: "apiKey"
    name: "Authorization"
    in: "header"
    x-amazon-apigateway-authtype: "custom"
definitions:
  GetAllEventResponseModel:
    type: "array"
    items:
      type: "object"
      properties:
        createdAt:
          type: "number"
          description: "イベント登録日時"
        address:
          type: "string"
          description: "イベント住所"
        endDate:
          type: "number"
          description: "イベントの公開終了日時"
        scope:
          type: "string"
          description: "公開状態"
        imageUrl:
          type: "string"
          description: "イベントのサムネイル画像"
        description:
          type: "string"
          description: "イベント紹介文"
        id:
          type: "string"
          description: "イベントID"
        title:
          type: "string"
          description: "イベント名・地域名"
        userId:
          type: "string"
          description: "ユーザーID"
        startDate:
          type: "number"
          description: "イベントの公開開始日時"
  GetAuthTokenRequestModel:
    type: "object"
    required:
    - "email"
    - "password"
    properties:
      password:
        type: "string"
        description: "パスワード"
      email:
        type: "string"
        description: "メールアドレス"
    description: "email, passwordでJWTトークンを返します。"
  PostItemResponseModel:
    type: "object"
    properties:
      message:
        type: "string"
        description: "メッセージ"
  PutItemResponseModel:
    type: "object"
    properties:
      message:
        type: "string"
        description: "メッセージ"
  PutEventResponseModel:
    type: "object"
    properties:
      message:
        type: "string"
        description: "メッセージ"
  PostEventResponseModel:
    type: "object"
    properties:
      message:
        type: "string"
        description: "メッセージ"
  GetUserResponseModel:
    type: "object"
    properties:
      createdAt:
        type: "integer"
        description: "アカウント作成日時"
      name:
        type: "string"
        description: "アカウント名前 (企業名・店名)"
      description:
        type: "string"
        description: "アカウント紹介文"
      iconUrl:
        type: "string"
        description: "アカウント画像のURLリンク"
      id:
        type: "string"
        description: "アカウントID"
      email:
        type: "string"
        description: "メールアドレス"
  PostItemRequestModel:
    type: "object"
    required:
    - "coordinate"
    - "description"
    - "eventId"
    - "radius"
    - "scope"
    - "title"
    properties:
      eventId:
        type: "string"
        description: "イベントID"
      file:
        type: "object"
        description: "アイテムのファイル情報"
        properties:
          dataURI:
            type: "string"
            description: "ファイルのデータURI"
          type:
            type: "string"
            description: "データの種類(file, link)"
        required:
        - "dataURI"
        - "type"
      coordinate:
        type: "object"
        description: "アイテムの座標"
        properties:
          latitude:
            type: "string"
            description: "アイテム配置の緯度"
          longitude:
            type: "string"
            description: "アイテム配置の経度"
        required:
        - "latitude"
        - "longitude"
      scope:
        type: "string"
        description: "公開状態"
      description:
        type: "string"
        description: "アイテム紹介文"
      title:
        type: "string"
        description: "アイテム名"
      radius:
        type: "number"
        description: "アイテム配置の半径"
    description: "アイテム情報を作成します。"
  PostUserResponseModel:
    type: "object"
    properties:
      token:
        type: "string"
        description: "JWTトークン"
  DeleteEventResponseModel:
    type: "object"
    properties:
      message:
        type: "string"
        description: "メッセージ"
  GetAuthTokenResponseModel:
    type: "object"
    properties:
      token:
        type: "string"
        description: "JWTトークン"
  PostUserRequestModel:
    type: "object"
    required:
    - "description"
    - "email"
    - "iconDataURI"
    - "name"
    - "password"
    properties:
      password:
        type: "string"
        description: "パスワード"
      iconDataURI:
        type: "string"
        description: "アイコン画像のデータURL"
      name:
        type: "string"
        description: "アカウント名前 (企業名・店名)"
      description:
        type: "string"
        description: "アカウント紹介文"
      email:
        type: "string"
        description: "メールアドレス"
    description: "アカウント情報を登録します。"
  PutEventRequestModel:
    type: "object"
    required:
    - "address"
    - "description"
    - "endDate"
    - "scope"
    - "startDate"
    - "title"
    properties:
      address:
        type: "string"
        description: "イベント住所"
      endDate:
        type: "number"
        description: "イベントの公開終了日時"
      scope:
        type: "string"
        description: "公開状態"
      description:
        type: "string"
        description: "イベント紹介文"
      imageDataURI:
        type: "string"
        description: "イベントのサムネイル画像のデータURI"
      title:
        type: "string"
        description: "イベント名・地域名"
      startDate:
        type: "number"
        description: "イベントの公開開始日時"
    description: "イベントを更新します。"
  PutUserRequestModel:
    type: "object"
    required:
    - "description"
    - "email"
    - "iconDataURI"
    - "name"
    - "password"
    properties:
      password:
        type: "string"
        description: "パスワード"
      iconDataURI:
        type: "string"
        description: "アイコン画像のデータURL"
      name:
        type: "string"
        description: "アカウント名前 (企業名・店名)"
      description:
        type: "string"
        description: "アカウント紹介文"
      email:
        type: "string"
        description: "メールアドレス"
    description: "アカウント情報を更新します。"
  DeleteItemResponseModel:
    type: "object"
    properties:
      message:
        type: "string"
        description: "メッセージ"
  Error:
    type: "object"
    properties:
      message:
        type: "string"
    title: "Error Schema"
  PostEventRequestModel:
    type: "object"
    required:
    - "address"
    - "description"
    - "endDate"
    - "scope"
    - "startDate"
    - "title"
    properties:
      address:
        type: "string"
        description: "イベント住所"
      endDate:
        type: "number"
        description: "イベントの公開終了日時"
      scope:
        type: "string"
        description: "公開状態"
      description:
        type: "string"
        description: "イベント紹介文"
      imageDataURI:
        type: "string"
        description: "イベントのサムネイル画像のデータURI"
      title:
        type: "string"
        description: "イベント名・地域名"
      startDate:
        type: "number"
        description: "イベントの公開開始日時"
    description: "イベントを作成します。"
  PutUserResponseModel:
    type: "object"
    properties:
      message:
        type: "string"
        description: "メッセージ"
  GetItemResponseModel:
    type: "object"
    properties:
      eventId:
        type: "string"
        description: "イベントID"
      createdAt:
        type: "number"
        description: "アイテム登録日時"
      coordinate:
        type: "object"
        description: "アイテムの座標"
        properties:
          latitude:
            type: "string"
            description: "アイテム配置の緯度"
          longitude:
            type: "string"
            description: "アイテム配置の経度"
        required:
        - "latitude"
        - "longitude"
      file:
        type: "object"
        description: "アイテムのファイル情報"
        properties:
          dataURI:
            type: "string"
            description: "ファイルのデータURI"
          type:
            type: "string"
            description: "データの種類(file, link)"
        required:
        - "dataURI"
        - "type"
      scope:
        type: "string"
        description: "公開状態"
      description:
        type: "string"
        description: "アイテム紹介文"
      id:
        type: "string"
        description: "アイテムID"
      title:
        type: "string"
        description: "アイテム名"
      radius:
        type: "number"
        description: "アイテム配置の半径"
      userId:
        type: "string"
        description: "ユーザーID"
  GetDownloadLogResponseModel:
    type: "array"
    items:
      type: "object"
      properties:
        item:
          type: "object"
          properties:
            eventId:
              type: "string"
              description: "イベントID"
            createdAt:
              type: "number"
              description: "アイテム登録日時"
            coordinate:
              type: "object"
              description: "アイテムの座標"
              properties:
                latitude:
                  type: "string"
                  description: "アイテム配置の緯度"
                longitude:
                  type: "string"
                  description: "アイテム配置の経度"
              required:
              - "latitude"
              - "longitude"
            scope:
              type: "string"
              description: "公開状態"
            description:
              type: "string"
              description: "アイテム紹介文"
            id:
              type: "string"
              description: "アイテムID"
            title:
              type: "string"
              description: "アイテム名"
            radius:
              type: "number"
              description: "アイテム配置の半径"
            userId:
              type: "string"
              description: "ユーザーID"
        ip:
          type: "string"
          description: "IPアドレス"
        downloadedAt:
          type: "number"
          description: "ダウンロード日時"
        userAgent:
          type: "string"
          description: "ユーザーエージェント"
  DeleteUserResponseModel:
    type: "object"
    properties:
      message:
        type: "string"
        description: "メッセージ"
  PutItemRequestModel:
    type: "object"
    required:
    - "coordinate"
    - "description"
    - "radius"
    - "scope"
    - "title"
    properties:
      coordinate:
        type: "object"
        description: "アイテムの座標"
        properties:
          latitude:
            type: "string"
            description: "アイテム配置の緯度"
          longitude:
            type: "string"
            description: "アイテム配置の経度"
        required:
        - "latitude"
        - "longitude"
      scope:
        type: "string"
        description: "公開状態"
      description:
        type: "string"
        description: "アイテム紹介文"
      title:
        type: "string"
        description: "アイテム名"
      radius:
        type: "number"
        description: "アイテム配置の半径"
    description: "アイテム情報を更新します。"
  GetEventResponseModel:
    type: "object"
    properties:
      createdAt:
        type: "number"
        description: "イベント登録日時"
      address:
        type: "string"
        description: "イベント住所"
      endDate:
        type: "number"
        description: "イベントの公開終了日時"
      scope:
        type: "string"
        description: "公開状態"
      imageUrl:
        type: "string"
        description: "イベントのサムネイル画像"
      description:
        type: "string"
        description: "イベント紹介文"
      id:
        type: "string"
        description: "イベントID"
      title:
        type: "string"
        description: "イベント名・地域名"
      userId:
        type: "string"
        description: "ユーザーID"
      startDate:
        type: "number"
        description: "イベントの公開開始日時"
  GetAllItemResponseModel:
    type: "array"
    items:
      type: "object"
      properties:
        eventId:
          type: "string"
          description: "イベントID"
        createdAt:
          type: "number"
          description: "アイテム登録日時"
        coordinate:
          type: "object"
          description: "アイテムの座標"
          properties:
            latitude:
              type: "string"
              description: "アイテム配置の緯度"
            longitude:
              type: "string"
              description: "アイテム配置の経度"
          required:
          - "latitude"
          - "longitude"
        scope:
          type: "string"
          description: "公開状態"
        description:
          type: "string"
          description: "アイテム紹介文"
        id:
          type: "string"
          description: "アイテムID"
        title:
          type: "string"
          description: "アイテム名"
        radius:
          type: "number"
          description: "アイテム配置の半径"
        userId:
          type: "string"
          description: "ユーザーID"
  DeleteUserRequestModel:
    type: "object"
    required:
    - "password"
    properties:
      password:
        type: "string"
        description: "削除確認用パスワード"
    description: "アカウント情報を完全に削除します。"
