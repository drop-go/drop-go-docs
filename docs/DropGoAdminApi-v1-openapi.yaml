openapi: 3.0.0
x-stoplight:
  id: ly8hmy1jns6sz
info:
  title: DropGoAdminApi-v1-openapi
  version: '1.0'
servers:
  - url: 'https://admin.drop-go-api.xyz'
    description: production
paths:
  /user:
    post:
      summary: Create New User
      operationId: post-user
      responses:
        '200':
          description: User Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                New User Bob Fellow:
                  value:
                    id: 12
                    firstName: Bob
                    lastName: Fellow
                    email: bob.fellow@gmail.com
                    dateOfBirth: '1996-08-24'
                    emailVerified: false
                    createDate: '2020-11-18'
        '400':
          description: Missing Required Information
        '409':
          description: Email Already Taken
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                dateOfBirth:
                  type: string
                  format: date
              required:
                - firstName
                - lastName
                - email
                - dateOfBirth
            examples:
              Create User Bob Fellow:
                value:
                  firstName: Bob
                  lastName: Fellow
                  email: bob.fellow@gmail.com
                  dateOfBirth: '1996-08-24'
        description: Post the necessary fields for the API to create a new user.
      description: Create a new user.
  /auth:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          $ref: '#/components/responses/Auth'
        '400':
          $ref: '#/components/responses/400Error'
        '500':
          $ref: '#/components/responses/500Error'
      operationId: get-auth
      requestBody:
        $ref: '#/components/requestBodies/Auth'
      parameters:
        - schema:
            type: string
          in: header
          name: Content-Type
          description: application/json
          required: true
        - schema:
            type: string
          in: header
        - schema:
            type: string
          in: header
  /event:
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
      operationId: get-event
  '/event/{eventId}':
    parameters:
      - schema:
          type: string
        name: eventId
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
      operationId: get-event-event=id
  /item:
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
      operationId: get-item
  '/item/{itemId}':
    parameters:
      - schema:
          type: string
        name: itemId
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
      operationId: get-item-itemId
  /log:
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
      operationId: get-log
  /log/download:
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
      operationId: get-log-download
components:
  schemas:
    User:
      title: User
      type: object
      description: ''
      x-examples:
        Alice Smith:
          id: 142
          firstName: Alice
          lastName: Smith
          email: alice.smith@gmail.com
          dateOfBirth: '1997-10-31'
          emailVerified: true
          signUpDate: '2019-08-24'
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        dateOfBirth:
          type: string
          format: date
          example: '1997-10-31'
        emailVerified:
          type: boolean
          description: Set to true if the user's email has been verified.
        createDate:
          type: string
          format: date
          description: The date that the user was created.
      required:
        - id
        - firstName
        - lastName
        - email
        - emailVerified
    Event:
      title: Event
      x-stoplight:
        id: rdw9x6da80nvg
      type: object
      properties:
        id:
          type: string
    Log:
      title: Log
      x-stoplight:
        id: jyz8kdkf7s35n
      type: object
      properties:
        id:
          type: string
    Item:
      title: Item
      x-stoplight:
        id: cr4engihdo6ep
      type: object
      properties:
        id:
          type: string
    Error:
      title: Error
      x-stoplight:
        id: n1507xvrmvq62
      type: object
      properties:
        message:
          type: string
      required:
        - message
  requestBodies:
    Auth:
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                format: email
              password:
                type: string
                format: password
            required:
              - email
              - password
  responses:
    Auth:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              token:
                type: string
            required:
              - token
    400Error:
      description: Example response
      content:
        application/json:
          schema:
            properties:
              id:
                type: string
    500Error:
      description: Example response
      content:
        application/json:
          schema:
            properties:
              id:
                type: string
  securitySchemes: {}
